#!/usr/bin/perl
#
#  The blogspam server.js file will keep a rotating buffer of the # N
# most-recent JSON submissions.
#
#  This utility will dump the values received in a given field of those
# recorded entries.
#
#  If you run it with no arguments you'll receive a dump of all known keys
# that have been included in the recent submissions.
#
#  If you run with the single argument of a key-name it'll show you all the
# values submitted for that key.
#
#  For example:
#
#    ./dump email
#    ./dump site
#    ./dump subject
#
# Steve
# --


use strict;
use warnings;

use Redis;
use JSON;


#
#  Get the field name to dump, if specified.
#
my $field = shift;
$field = lc($field) if ($field);


#
#  The known fields
#
my %known;


#
#  Get the most recent logged entries
#
my $redis  = new Redis();
my $json   = JSON->new()->allow_nonref();
my @recent = $redis->lrange( "recent-comments", 0, -1 );

#
#  Process each saved JSON object.
#
foreach my $ent (@recent)
{
    my $obj;

    # decode if we can
    eval {$obj = $json->decode($ent); $obj = $json->decode($obj)};
    if ($@)
    {
        print "Failed to decode : $@";
        next;
    }

    # if we're showing a field ..
    if ($field)
    {

        # iterate over all keys to cover case-matches. sigh.
        foreach my $key ( keys %$obj )
        {
            my $lkey = lc($key);
            if ( $lkey eq $field )
            {
                print $obj->{ $key } . "\n";
            }
        }
    }
    else
    {

        # record the fields we found in this object.
        foreach my $key ( keys %$obj )
        {
            $known{ $key } += 1;
        }
    }
}

#
#  If we didn't get a field show known-fields.
#
if ( !$field )
{
    foreach my $key ( keys %known )
    {
        print $key . "\n";
    }
}

$redis->quit();
exit(0);


